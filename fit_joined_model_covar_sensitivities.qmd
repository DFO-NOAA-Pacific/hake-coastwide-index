---
title: "Coastwide index of Pacific hake"
author: "Kelli Johnson, Eric Ward"
format: pdf
editor: visual
---

## Data

We are going to pull data from the `surveyjoin` package. We will restrict the data to just PBS and NWFSC samples, because the AFSC occurrences are so sparse.

```{r}
remotes::install_github("DFO-NOAA-Pacific/surveyjoin", "8709fd1")
remotes::install_github("pbs-assess/sdmTMB", "b146eb3")
library(surveyjoin)
library(sdmTMB)
library(tidyr)
library(dplyr)

if(!file.exists("data_for_modelling.rds")) {
  d <- get_data(common = "north pacific hake", regions = c("pbs", "nwfsc"), years = 2003:2023) |>
    dplyr::group_by(event_id) |>
    slice(1) |>
  as.data.frame()
  
  table(d$year, d$region)
  
  saveRDS(d, "data_for_modelling.rds")
}
d <- readRDS("data_for_modelling.rds")
```

## Data cleaning

The first step is to generate a mesh over the PBS / NWFSC sampling domain. The cutoff distance of 15 translates into \~ 880 knots.

```{r}
library(sdmTMB)
d <- dplyr::mutate(d, 
                   lon_mid = (lon_start + lon_end)/2,
                   lat_mid = (lat_start + lat_end)/2) |>
  dplyr::filter(!is.na(lon_mid), !is.na(lat_mid))
d <- add_utm_columns(d, ll_names = c("lon_mid","lat_mid"))

mesh <- make_mesh(d, xy_cols = c("X","Y"), cutoff=15)

mesh$mesh$n

```

```{r}
d$cpue <- d$catch_weight/d$effort
d$fyear <- as.factor(d$year)

```

## Statistical model

Because of the PBS checkerboard sampling pattern, we need to include RW/AR spatiotemporal terms or time as a random walk. As a first model, we'll try fixed year effects and AR(1) spatiotemporal fields

```{r}

fit <- sdmTMB(cpue ~ 0 + fyear,
              spatial="on",
              spatiotemporal = "AR1",
              mesh = mesh,
              data = d,
              time = "year",
              family = delta_gamma())
sanity(fit) # passes all
saveRDS(fit, "fitted_models/null.rds")
```

## Predictions

We can extract the survey grids from the surveyjoin package for this:

```{r}
grid <- rbind(surveyjoin::nwfsc_grid,
surveyjoin::dfo_synoptic_grid) |>
  dplyr::select(-survey_domain_year)
years <- unique(d$year)
# create a combination of grid and years
expanded_grid <- crossing(grid, year = years)
expanded_grid$fyear <- as.factor(expanded_grid$year)

# add UTM -- this is UTM zone 10 / 32610
expanded_grid <- add_utm_columns(expanded_grid, ll_names = c("lon","lat"), utm_crs = get_crs(d, ll_names = c("lon_mid","lat_mid")))
```

Now make predictions to the PBS - NWFSC grid

```{r}
predictions <- predict(fit, newdata = expanded_grid, return_tmb_object = TRUE)
saveRDS(predictions,"predictions/null.rds")
```

## Index

```{r}
index <- get_index(predictions, area = expanded_grid$area, bias_correct = TRUE)
saveRDS(index, "indices/null.rds")
```

## Plots and diagnostics

```{r}
p1 <- index |>
  ggplot(aes(year, log_est)) + 
  geom_ribbon(aes(ymin=log_est-2*se, ymax=log_est+2*se), col=NA, fill=viridis(1), alpha=0.5) + 
  geom_line(col=viridis(1)) + 
  theme_bw() + 
  xlab("Year") + ylab("Ln (estimate)")
ggsave(plot = p1, filename = "plots/null/log_index.png",width=7,height=5)

# Same plot, normal space
p1 <- index |>
  ggplot(aes(year, est)) + 
  geom_ribbon(aes(ymin=lwr, ymax=upr), col=NA, fill=viridis(1), alpha=0.5) + 
  geom_line(col=viridis(1)) + 
  theme_bw() + 
  xlab("Year") + ylab("Estimate")
ggsave(plot = p1, filename = "plots/null/index.png",width=7,height=5)
```

Diagnostics – spatial fields

```{r}
predictions$data$scaled_omega_s1 <- predictions$data$omega_s1 - mean(predictions$data$omega_s1)
p1 <- predictions$data |> 
  filter(year==2003) |>
ggplot(aes(X,Y, col=scaled_omega_s1)) + 
  geom_point(size=0.01,alpha=0.3) +
    coord_fixed() + 
  scale_color_gradient2()
ggsave(plot = p1, filename = "plots/null/omega_s1.png",width=7,height=5)

p1 <- predictions$data |> 
  filter(year==2003) |>
ggplot(aes(X,Y, col=omega_s2)) + 
  geom_point(size=0.01,alpha=0.3) +
    coord_fixed() + 
  scale_color_gradient2()
ggsave(plot = p1, filename = "plots/null/omega_s2.png",width=7,height=5)
```

Diagnostics – spatiotemporal fields

```{r}
p1 <- predictions$data |> 
ggplot(aes(X,Y, col=epsilon_st1)) + 
  geom_point(size=0.01,alpha=0.3) +
    coord_fixed() + 
  scale_color_gradient2() + 
  facet_wrap(~year)
ggsave(plot = p1, filename = "plots/null/epsilon_st1.png",width=9,height=7)

p1 <- predictions$data |> 
ggplot(aes(X,Y, col=epsilon_st2)) + 
  geom_point(size=0.01,alpha=0.3) +
    coord_fixed() + 
  scale_color_gradient2() + 
  facet_wrap(~year)
ggsave(plot = p1, filename = "plots/null/epsilon_st2.png",width=9,height=7)
```

Residuals

```{r}
fit$data$resid <- residuals(fit)
```

Sensitivity – DOY

```{r}
d$doy <- lubridate::yday(d$date)
d$zdoy <- as.numeric(scale(d$doy))
d$zdoy2 <- d$zdoy^2
fit2 <- sdmTMB(cpue ~ 0 + fyear + zdoy + zdoy2,
              spatial="on",
              spatiotemporal = "AR1",
              mesh = mesh,
              data = d,
              time = "year",
              family = delta_gamma())
sanity(fit2) # passes all
saveRDS(fit2, "fitted_models/doy.rds")

expanded_grid$doy <- 182 # july 1
expanded_grid$zdoy <- (182 - mean(d$doy)) / sd(d$doy)
expanded_grid$zdoy2 <- expanded_grid$zdoy^2
predictions <- predict(fit2, newdata = expanded_grid, return_tmb_object = TRUE)
saveRDS(predictions,"predictions/doy.rds")
index <- get_index(predictions, area = expanded_grid$area, bias_correct = TRUE)
saveRDS(index, "indices/doy.rds")

p1 <- index |>
  ggplot(aes(year, log_est)) + 
  geom_ribbon(aes(ymin=log_est-2*se, ymax=log_est+2*se), col=NA, fill=viridis(1), alpha=0.5) + 
  geom_line(col=viridis(1)) + 
  theme_bw() + 
  xlab("Year") + ylab("Ln (estimate)")
ggsave(plot = p1, filename = "plots/doy/log_index.png",width=7,height=5)

# Make comparison plot
null <- readRDS("indices/null.rds")
null$Model <- "Null"
index$Model <- "DOY"
index <- rbind(null, index)

p1 <- index |>
  ggplot(aes(year, log_est, group=Model, col=Model, fill=Model)) + 
  geom_ribbon(aes(ymin=log_est-2*se, ymax=log_est+2*se), col=NA, alpha=0.5) + 
  geom_line() + 
  theme_bw() + 
  scale_color_viridis_d(option="magma", begin=0.2,end=0.8) + 
  scale_fill_viridis_d(option="magma", begin=0.2,end=0.8) + 
  xlab("Year") + ylab("Ln (estimate)")
ggsave(plot = p1, filename = "plots/index_compare.png",width=7,height=5)
```
